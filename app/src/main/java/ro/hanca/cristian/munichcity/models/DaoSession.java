package ro.hanca.cristian.munichcity.models;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ro.hanca.cristian.munichcity.models.Type;
import ro.hanca.cristian.munichcity.models.SubType;
import ro.hanca.cristian.munichcity.models.POI;

import ro.hanca.cristian.munichcity.models.TypeDao;
import ro.hanca.cristian.munichcity.models.SubTypeDao;
import ro.hanca.cristian.munichcity.models.POIDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig typeDaoConfig;
    private final DaoConfig subTypeDaoConfig;
    private final DaoConfig pOIDaoConfig;

    private final TypeDao typeDao;
    private final SubTypeDao subTypeDao;
    private final POIDao pOIDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        typeDaoConfig = daoConfigMap.get(TypeDao.class).clone();
        typeDaoConfig.initIdentityScope(type);

        subTypeDaoConfig = daoConfigMap.get(SubTypeDao.class).clone();
        subTypeDaoConfig.initIdentityScope(type);

        pOIDaoConfig = daoConfigMap.get(POIDao.class).clone();
        pOIDaoConfig.initIdentityScope(type);

        typeDao = new TypeDao(typeDaoConfig, this);
        subTypeDao = new SubTypeDao(subTypeDaoConfig, this);
        pOIDao = new POIDao(pOIDaoConfig, this);

        registerDao(Type.class, typeDao);
        registerDao(SubType.class, subTypeDao);
        registerDao(POI.class, pOIDao);
    }
    
    public void clear() {
        typeDaoConfig.getIdentityScope().clear();
        subTypeDaoConfig.getIdentityScope().clear();
        pOIDaoConfig.getIdentityScope().clear();
    }

    public TypeDao getTypeDao() {
        return typeDao;
    }

    public SubTypeDao getSubTypeDao() {
        return subTypeDao;
    }

    public POIDao getPOIDao() {
        return pOIDao;
    }

}
